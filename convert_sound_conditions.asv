function sound_condition_array_updated = convert_sound_conditions(sound_condition_array,conditions_per_speaker,speaker_ids)
speaker_ids = [1,2,4];
total_speakers = 1:4;
sound_condition_array_updated=sound_condition_array;
for file =1 :length(sound_condition_array)
    file
    for t = 1:length(sound_condition_array(file).VR_sounds)(1,t)
        %CONDITION NAN
        if isnan(sound_condition_array(file).VR_sounds(t,1))
            id = setdiff(total_speakers,speaker_ids);
            sound_condition_array_updated(file).VR_sounds(t,1) = {setdiff(find(conditions_per_speaker(:,id)),[find(conditions_per_speaker(:,speaker_ids(1)));find(conditions_per_speaker(:,speaker_ids(2)));find(conditions_per_speaker(:,speaker_ids(3)))])};
        
        %CONDITION1
        elseif sound_condition_array(file).VR_sounds(t,1) == 1 && ismember(2,speaker_ids) %if speaker 1 and 2 are present then the multisounds are detected separately
            id = speaker_ids(1);
            sound_condition_array_updated(file).VR_sounds(t,1) = setdiff(find(conditions_per_speaker(:,id)),[find(conditions_per_speaker(:,speaker_ids(2)));find(conditions_per_speaker(:,speaker_ids(3)))]);
        elseif sound_condition_array(file).VR_sounds(t,1) == 1 && ~ismember(2,speaker_ids) %if speaker 1 and 2 is not present then the multisounds are not detected separately
            id =  speaker_ids(1);
            sound_condition_array_updated(file).VR_sounds(t,1) = find(conditions_per_speaker(:,id));
        
         %CONDITION2
        elseif sound_condition_array(file).VR_sounds(t,1) == 3 && ismember(1,speaker_ids) %if speaker 1 and 2 are present then the multisounds are detected separately
            id =  speaker_ids(3);
            sound_condition_array_updated(file).VR_sounds(t,1) = setdiff(find(conditions_per_speaker(:,id)),[find(conditions_per_speaker(:,speaker_ids(1)));find(conditions_per_speaker(:,speaker_ids(2)))]);
        elseif sound_condition_array(file).VR_sounds(t,1) == 3 && ~ismember(1,speaker_ids) %if speaker 1 and 2 is not present then the multisounds are not detected separately
            id =  speaker_ids(3);
            sound_condition_array_updated(file).VR_sounds(t,1) = find(conditions_per_speaker(:,id));
        
        %CONDITION3 minus whatever sound they share with speaker_ids(1)
        elseif speaker_ids(2) == 2 && sound_condition_array(file).VR_sounds(t,1) == 2 && ismember(1,speaker_ids) %if speaker 3 and 4 are present then the multisounds are detected separately
            id =  speaker_ids(2);
            sound_condition_array_updated(file).VR_sounds(t,1) = {setdiff(find(conditions_per_speaker(:,id)),[find(conditions_per_speaker(:,speaker_ids(1)));find(conditions_per_speaker(:,speaker_ids(3)))])};
       
            %if other speaker plugged in then this is what I need
       elseif speaker_ids(2) == 3 && sound_condition_array(file).VR_sounds(t,1) == 2 && ismember(4,speaker_ids) %if speaker 3 and 4 are present then the multisounds are detected separately
            id =  speaker_ids(2);
            sound_condition_array_updated(file).VR_sounds(t,1) = setdiff(find(conditions_per_speaker(:,id)),[find(conditions_per_speaker(:,speaker_ids(1)));find(conditions_per_speaker(:,speaker_ids(3)))]);
        

        %CONDITION4 - speakers next to each other refers to a single
        %condition
        elseif sound_condition_array(file).VR_sounds(t,1) == 4 && all(ismember([1,2],speaker_ids)) %if speaker  1 and 2 are present then the multisounds are detected separately
            id = [1,2];
            sound_condition_array_updated(file).VR_sounds(t,1) = find(conditions_per_speaker(:,id(1))&conditions_per_speaker(:,id(2)));
        elseif sound_condition_array(file).VR_sounds(t,1) == 4 && all(ismember([3,4],speaker_ids)) %if speaker  1 and 2 are present then the multisounds are detected separately
            id = [3,4];
            sound_condition_array_updated(file).VR_sounds(t,1) = find(conditions_per_speaker(:,id(1))&conditions_per_speaker(:,id(2)));
        end

    end
end